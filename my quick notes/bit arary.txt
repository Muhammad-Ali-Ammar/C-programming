-- bit array : y3nii al 1 element is 1 bit 

1- using bool , malhaash lazma , shabh al int al 3adya 


		typedef enum { false, true } bool;

		int main()
		{
		bool x[3];  // size = 3*4 = 12 bytes ,, sizeof bool = int 
		}
		
		
2- using bit field

	  typedef struct port
		{
			unsigned char pin0:1;  // just 1 bit 
			
		} PORT;   


		int main()

		{
			PORT x[5];

			cout(sizeof(x));   //5 bytes = 5 * 1 (sizeof char ) 
		}


	// bit field msh by3ml padding
	

3- using mapping bits 


	-- char x[2];  // means 16 bits 
	
	-- hat3ml function maslun set_bit( char arr[], int bit_position) // bit_position 0 :15
			
			
		••	
			0:7 ,, arr[0]
			8:15,, arr[1]
			
			-- index = bit_position / 8 = bit_position /(sizeof(char)*8);
		   
		•• 
		   0:7 ,, 0:7
		   8:15,, 0:7 of second variable 
		   
		   -- bit = bit_position % 8 = bit_position%(sizeof(char)*8);
		   
		   
		   
		##### code #####
		   
		   
			void set_bit( char arr[],int k)
			{
				int idx = k/(sizeof(char)*8);
				int bit = k % (sizeof(char)*8);

				arr[idx]|=1<<bit;
			}
			int main()

			{
				char x[2];  // 16 bit 
				set_bit(x,0);   
				set_bit(x,8);
				set_bit(x,9);
				
				cout(x[0]); // 1
				cout(x[1)); //3   =0000 0011

			}

		   
		   
		   
		   
	-- ta3deel b3d ma tfhm al code 
	
		typedef unsigned char BIT ;
		#define Num_Of_bits(x) (x-1)/8+1

		void set_bit(  void *arr,int k)
		{
			int idx = k/(sizeof(arr[0])*8);
			int bit = k % (sizeof(arr[0])*8);


			*(char*)(arr+idx) |=1<<bit;
		}
		int main()

		{
			BIT x[ Num_Of_bits(16) ]={};

			set_bit(x,1);
			set_bit(x,8);
			set_bit(x,9);


		}

	